<?php

/**
 * Implements hook_theme().
 */
function media_displays_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['media_displays_download_file_alt'] = array(
    'variables' => array(
      'items' => NULL,
      'settings' => array()
    ),
    'file' => 'media_displays.formatter.inc'
  );
  $theme['download_alt_item'] = array(
    'variables' => array(
      'file' => NULL,
      'link_text' => NULL,
      'title_text' => NULL
    ),
    'template' => 'download-alt-item',
    'path' => $path . '/templates',
  );
  return $theme;
}

/**
 * Implementation of hook_field_formatter_info().
 */
function media_displays_field_formatter_info() {
  $formatters = array(
    'direct_download_alt' => array(
      'label' => t('Download File (Link Text Field)'),
      'field types' => array('file', 'image'),
      'description' => t('Displays a link to direct download the file using a text field.'),
      'settings' => array(
        'link_field' => NULL,
        'title_field' => NULL
      ),
      'file formatter' => array(
        'mime types' => array('text/*', 'application/*'),
      ),
    ),
  );
  return $formatters;
}


/**
 * Implementation of hook_field_formatter_view().
 */
function media_displays_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'direct_download_alt':
      $element[0] = array(
        '#theme' => 'media_displays_download_file_alt',
        '#items' => $items,
        '#settings' => $display['settings'],
      );
      break;
  }
  return $element;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function media_displays_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $type = $display['type'];
  $settings = $display['settings'];
  $element = array();

  switch ($type) {
    case 'direct_download_alt':
      $document_fields = field_info_instances('file', 'document');
      $options = array();
      foreach ($document_fields as $key => $value) {
        if ($value['widget']['module'] == 'text') {
          $options[$key] = $value['label'];
        }
      }
      $element['link_field'] = array(
        '#type' => 'select',
        '#title' => t('Field for link text'),
        '#options' => $options,
        '#default_value' => isset($settings['link_field']) ? $settings['link_field'] : '',
      );
      $element['title_field'] = array(
        '#type' => 'select',
        '#title' => t('Field for title text. (Text that is displayed upon hover)'),
        '#options' => $options,
        '#default_value' => isset($settings['title_field']) ? $settings['title_field'] : '',
      );
      break;
  }


  return $element;

}

/**
 *  Implements hook_init().
 */
function media_displays_init() {
  drupal_add_css('.view-media-default iframe {width:200px; height:140px;}', 'inline');
//  drupal_add_js(drupal_get_path('module', 'media_displays') . '/media_displays.js');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function media_displays_form_media_wysiwyg_format_form_alter(&$form, &$form_state, $form_id) {
  if (sizeof($form['#formats']) > 1) {
    if (isset($form['options']['fields']) && $form['options']['fields']['#bundle'] == 'video') {
      unset($form['options']['format']['#options']['default']);
    }
  }
}

/**
 * Implements hook_media_wysiwyg_token_to_markup_alter().
 */
function media_displays_media_wysiwyg_token_to_markup_alter(&$element, $tag_info, $settings) {
  if (isset($element['content']) && isset($element['content']['file'])) {
    switch ($element['content']['file']['#theme']) {
      case 'media_displays_download_file_alt':
        $file_settings = $element['content']['file']['#settings'];
        $link_text = $tag_info['link_text'];
        if (isset($tag_info['fields'][$file_settings['title_field'] . '[und][0][value]'])) {
          $title_text = $tag_info['fields'][$file_settings['title_field'] . '[und][0][value]'];
        }
        else {
          $title_text = '';
        }

        $element['content']['file']['#theme'] = 'download_alt_item';
        $element['content']['file']['#link_text'] = $link_text;
        $element['content']['file']['#title_text'] = $title_text;
        break;
    }
  }
}